// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/aki-13627/animalia/backend-go/ent/comment"
	"github.com/aki-13627/animalia/backend-go/ent/dailytask"
	"github.com/aki-13627/animalia/backend-go/ent/followrelation"
	"github.com/aki-13627/animalia/backend-go/ent/like"
	"github.com/aki-13627/animalia/backend-go/ent/pet"
	"github.com/aki-13627/animalia/backend-go/ent/post"
	"github.com/aki-13627/animalia/backend-go/ent/schema"
	"github.com/aki-13627/animalia/backend-go/ent/user"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescContent is the schema descriptor for content field.
	commentDescContent := commentFields[1].Descriptor()
	// comment.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	comment.ContentValidator = commentDescContent.Validators[0].(func(string) error)
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentFields[2].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	// commentDescID is the schema descriptor for id field.
	commentDescID := commentFields[0].Descriptor()
	// comment.DefaultID holds the default value on creation for the id field.
	comment.DefaultID = commentDescID.Default.(func() uuid.UUID)
	dailytaskFields := schema.DailyTask{}.Fields()
	_ = dailytaskFields
	// dailytaskDescCreatedAt is the schema descriptor for created_at field.
	dailytaskDescCreatedAt := dailytaskFields[1].Descriptor()
	// dailytask.DefaultCreatedAt holds the default value on creation for the created_at field.
	dailytask.DefaultCreatedAt = dailytaskDescCreatedAt.Default.(func() time.Time)
	// dailytaskDescID is the schema descriptor for id field.
	dailytaskDescID := dailytaskFields[0].Descriptor()
	// dailytask.DefaultID holds the default value on creation for the id field.
	dailytask.DefaultID = dailytaskDescID.Default.(func() uuid.UUID)
	followrelationFields := schema.FollowRelation{}.Fields()
	_ = followrelationFields
	// followrelationDescCreatedAt is the schema descriptor for created_at field.
	followrelationDescCreatedAt := followrelationFields[1].Descriptor()
	// followrelation.DefaultCreatedAt holds the default value on creation for the created_at field.
	followrelation.DefaultCreatedAt = followrelationDescCreatedAt.Default.(func() time.Time)
	// followrelationDescID is the schema descriptor for id field.
	followrelationDescID := followrelationFields[0].Descriptor()
	// followrelation.DefaultID holds the default value on creation for the id field.
	followrelation.DefaultID = followrelationDescID.Default.(func() uuid.UUID)
	likeFields := schema.Like{}.Fields()
	_ = likeFields
	// likeDescCreatedAt is the schema descriptor for created_at field.
	likeDescCreatedAt := likeFields[1].Descriptor()
	// like.DefaultCreatedAt holds the default value on creation for the created_at field.
	like.DefaultCreatedAt = likeDescCreatedAt.Default.(func() time.Time)
	// likeDescID is the schema descriptor for id field.
	likeDescID := likeFields[0].Descriptor()
	// like.DefaultID holds the default value on creation for the id field.
	like.DefaultID = likeDescID.Default.(func() uuid.UUID)
	petFields := schema.Pet{}.Fields()
	_ = petFields
	// petDescName is the schema descriptor for name field.
	petDescName := petFields[1].Descriptor()
	// pet.NameValidator is a validator for the "name" field. It is called by the builders before save.
	pet.NameValidator = petDescName.Validators[0].(func(string) error)
	// petDescBirthDay is the schema descriptor for birth_day field.
	petDescBirthDay := petFields[2].Descriptor()
	// pet.BirthDayValidator is a validator for the "birth_day" field. It is called by the builders before save.
	pet.BirthDayValidator = petDescBirthDay.Validators[0].(func(string) error)
	// petDescImageKey is the schema descriptor for image_key field.
	petDescImageKey := petFields[5].Descriptor()
	// pet.ImageKeyValidator is a validator for the "image_key" field. It is called by the builders before save.
	pet.ImageKeyValidator = petDescImageKey.Validators[0].(func(string) error)
	// petDescCreatedAt is the schema descriptor for created_at field.
	petDescCreatedAt := petFields[6].Descriptor()
	// pet.DefaultCreatedAt holds the default value on creation for the created_at field.
	pet.DefaultCreatedAt = petDescCreatedAt.Default.(func() time.Time)
	// petDescID is the schema descriptor for id field.
	petDescID := petFields[0].Descriptor()
	// pet.DefaultID holds the default value on creation for the id field.
	pet.DefaultID = petDescID.Default.(func() uuid.UUID)
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescIndex is the schema descriptor for index field.
	postDescIndex := postFields[1].Descriptor()
	// post.IndexValidator is a validator for the "index" field. It is called by the builders before save.
	post.IndexValidator = postDescIndex.Validators[0].(func(int) error)
	// postDescCaption is the schema descriptor for caption field.
	postDescCaption := postFields[2].Descriptor()
	// post.CaptionValidator is a validator for the "caption" field. It is called by the builders before save.
	post.CaptionValidator = postDescCaption.Validators[0].(func(string) error)
	// postDescImageKey is the schema descriptor for image_key field.
	postDescImageKey := postFields[3].Descriptor()
	// post.ImageKeyValidator is a validator for the "image_key" field. It is called by the builders before save.
	post.ImageKeyValidator = postDescImageKey.Validators[0].(func(string) error)
	// postDescCreatedAt is the schema descriptor for created_at field.
	postDescCreatedAt := postFields[4].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the created_at field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	// postDescID is the schema descriptor for id field.
	postDescID := postFields[0].Descriptor()
	// post.DefaultID holds the default value on creation for the id field.
	post.DefaultID = postDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescIndex is the schema descriptor for index field.
	userDescIndex := userFields[1].Descriptor()
	// user.IndexValidator is a validator for the "index" field. It is called by the builders before save.
	user.IndexValidator = userDescIndex.Validators[0].(func(int) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[3].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescBio is the schema descriptor for bio field.
	userDescBio := userFields[4].Descriptor()
	// user.DefaultBio holds the default value on creation for the bio field.
	user.DefaultBio = userDescBio.Default.(string)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[6].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
